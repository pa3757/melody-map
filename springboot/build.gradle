plugins {
	id 'java'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'maven-publish'
	id 'org.springframework.boot.experimental.thin-launcher' version "1.0.31.RELEASE"
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	mavenLocal() // 로컬 Maven 저장소
	gradlePluginPortal()
}

ext {
	set('springCloudVersion', "2022.0.3")
}
apply plugin: 'com.github.johnrengelman.shadow'
assemble.dependsOn = [thinJar, shadowJar]

shadowJar.mustRunAfter thinJar

dependencies {

	implementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

	implementation 'org.springframework.cloud:spring-cloud-starter-function-web'
	implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	implementation 'com.amazonaws:aws-lambda-java-events:3.11.0' // AWS Lambda 이벤트용 라이브러리
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.2' // AWS Lambda 기본 라이브러리

	implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.529')
	implementation 'com.amazonaws:aws-java-sdk-s3' // AWS S3 SDK
	implementation 'com.amazonaws:aws-java-sdk-dynamodb' // AWS DynamoDB SDK

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}

shadowJar {
	archiveClassifier.set('aws') // 생성된 JAR 파일의 분류자 설정
	manifest {
		attributes 'Main-Class': 'org.springframework.cloud.function.adapter.aws.FunctionInvoker' // 메인 클래스 설정
	}
	mergeServiceFiles() // 서비스 파일 병합
	append 'META-INF/spring.handlers' // spring.handlers 파일 추가
	append 'META-INF/spring.schemas' // spring.schemas 파일 추가
	append 'META-INF/spring.tooling' // spring.tooling 파일 추가
	append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports' // AutoConfiguration.imports 파일 추가
	append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports' // ManagementContextConfiguration.imports 파일 추가
}